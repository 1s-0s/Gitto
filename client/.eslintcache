[{"D:\\projects\\gitto\\Gitto\\client\\src\\index.js":"1","D:\\projects\\gitto\\Gitto\\client\\src\\store.js":"2","D:\\projects\\gitto\\Gitto\\client\\src\\App.js":"3","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js":"4","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js":"5","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js":"6","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js":"7","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js":"8","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js":"9","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js":"10","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js":"11","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js":"12","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js":"13","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js":"14","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js":"15","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js":"16","D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js":"17","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js":"18","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js":"19","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js":"20","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js":"21","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js":"22","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js":"23","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js":"24"},{"size":283,"mtime":1616010563612,"results":"25","hashOfConfig":"26"},{"size":470,"mtime":1615726195469,"results":"27","hashOfConfig":"26"},{"size":685,"mtime":1615716124799,"results":"28","hashOfConfig":"26"},{"size":373,"mtime":1615737305554,"results":"29","hashOfConfig":"26"},{"size":461,"mtime":1615309537171,"results":"30","hashOfConfig":"26"},{"size":1191,"mtime":1615836871908,"results":"31","hashOfConfig":"26"},{"size":381,"mtime":1615808215565,"results":"32","hashOfConfig":"26"},{"size":298,"mtime":1615735874532,"results":"33","hashOfConfig":"26"},{"size":387,"mtime":1615922857501,"results":"34","hashOfConfig":"26"},{"size":6110,"mtime":1615993634104,"results":"35","hashOfConfig":"26"},{"size":683,"mtime":1615311692318,"results":"36","hashOfConfig":"26"},{"size":1999,"mtime":1615922857757,"results":"37","hashOfConfig":"26"},{"size":1294,"mtime":1615922857499,"results":"38","hashOfConfig":"26"},{"size":4113,"mtime":1616071508982,"results":"39","hashOfConfig":"26"},{"size":2211,"mtime":1615983150135,"results":"40","hashOfConfig":"26"},{"size":221,"mtime":1615725250062,"results":"41","hashOfConfig":"26"},{"size":185,"mtime":1615639749768,"results":"42","hashOfConfig":"26"},{"size":134,"mtime":1615829077551,"results":"43","hashOfConfig":"26"},{"size":972,"mtime":1615994701114,"results":"44","hashOfConfig":"26"},{"size":4105,"mtime":1615987722557,"results":"45","hashOfConfig":"26"},{"size":1673,"mtime":1615923587853,"results":"46","hashOfConfig":"26"},{"size":1309,"mtime":1615983176397,"results":"47","hashOfConfig":"26"},{"size":2151,"mtime":1615985266595,"results":"48","hashOfConfig":"26"},{"size":567,"mtime":1615902019446,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},"100x36k",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"53"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"D:\\projects\\gitto\\Gitto\\client\\src\\index.js",["107"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n            <App/>\r\n    </Provider>\r\n,document.getElementById('root'));",["108","109"],"D:\\projects\\gitto\\Gitto\\client\\src\\store.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\App.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js",["110"],"import { ADD_USER } from \"../action/authAction\";\r\n\r\nconst initialState = {\r\n    user: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js",["111"],"import {USER_DESCRIPTION} from \"../action/index\";\r\n\r\nexport default (state=[],action) => {\r\n    switch(action.type){\r\n        case USER_DESCRIPTION : \r\n            console.log(\"user description reducer working\");\r\n            return state;\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js",["112"],"import React from \"react\";\r\nimport { Image, Statistic } from \"semantic-ui-react\";\r\nimport {\r\n    Container,\r\n    ProfileCard,\r\n    ImageContent,\r\n    ImageSubContent,\r\n    StatDesc,\r\n    StatNum,\r\n    Section,\r\n    ButtonLink\r\n} from \"../styles/ProfileStyle\";\r\nimport { FaEdit as Edit } from \"react-icons/fa\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\nimport Axios from \"axios\";\r\n//to fetch data from cookie\r\nimport Cookies from 'js-cookie';\r\n\r\n// const contributionAPI = \"https://activity-graph.herokuapp.com/graph?username=Samridhi-98&theme=blue-green\";\r\nclass Profile extends React.Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            userinfo:{},\r\n            userid:Cookies.get(\"userid\")\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        //? proxy:5000 in package.json\r\n        Axios({\r\n            url:\"/userinfo/\"+this.state.userid,\r\n            method:\"GET\"\r\n        })\r\n        .then((response)=>{\r\n            \r\n            this.setState({userinfo:response.data},()=>{\r\n                console.log(this.state.userinfo);\r\n            });\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"-----error while fetching user info---\",err);\r\n        })\r\n    }\r\n    render() {\r\n        const githubStat = `https://github-readme-stats.vercel.app/api?username=${this.state.userinfo.username}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`;\r\n        return (\r\n            <Container>\r\n                <ProfileCard>\r\n                    <Image src={this.state.userinfo.avatar} circular centered size=\"small\" />\r\n                    <ImageContent>\r\n                        {this.state.userinfo.name}\r\n                        <ImageSubContent>\r\n                            <ButtonLink to=\"/dashboard/editprofile\">\r\n                                <Edit />\r\n                            </ButtonLink>\r\n                        </ImageSubContent>\r\n                    </ImageContent>\r\n\r\n\r\n                    <Section vertical>\r\n                        <Statistic.Group widths=\"three\">\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.follower}</StatNum>\r\n                                    {/* <StatNum>10</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Followers</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.following}</StatNum>\r\n                                    {/* <StatNum>20</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Followings</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.repositry}</StatNum>\r\n                                    {/* <StatNum>51</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Repositries</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                        </Statistic.Group>\r\n                    </Section>\r\n                    {/* https://github-readme-stats.vercel.app/api?username=Samridhi-98&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true */}\r\n                    {/* <Image src={} /> */}\r\n                    <Image src={githubStat} />\r\n                </ProfileCard>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js",["113","114","115"],"import React from \"react\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport {\r\n  CardSegment,\r\n  CardDetails,\r\n  CardHeader,\r\n  SubHeader,\r\n  GistSegment,\r\n  ButtonGroup,\r\n  CardButton,\r\n  // HeartButtonRed,\r\n  // ReactIcon\r\n} from \"../styles/CardStyle\";\r\n\r\nimport Gist from \"react-gist\";\r\n\r\nclass Card extends React.Component {\r\n  state = {\r\n    liked: false,\r\n  };\r\n  toggleLike = async () => {\r\n    await this.setState({ liked: this.state.liked === true ? false : true });\r\n    console.log(this.state.liked);\r\n  };\r\n  render() {\r\n    return (\r\n      <CardSegment>\r\n        <GistSegment>\r\n          <Gist id=\"27eae9dd262f83cdede0613f614933de\" />\r\n        </GistSegment>\r\n        <CardDetails>\r\n          <CardHeader>\r\n            Kavya Kulkarni\r\n          {/* /<ButtonGroup> */}\r\n            <CardButton circular color=\"teal\" size=\"mini\" floated=\"right\" icon=\"arrow down\"></CardButton>\r\n            <CardButton circular color=\"teal\" size=\"mini\" floated=\"right\" icon=\"arrow up\"></CardButton>\r\n            <CardButton circular color=\"teal\" size=\"mini\" floated=\"right\" icon=\"plus\"></CardButton>\r\n            {/* <CardButton circular color=\"black\" animated=\"vertical\">\r\n              <CardButton.Content hidden>Like</CardButton.Content>\r\n              <CardButton.Content visible>\r\n                <Icon name='arrow up' />\r\n              </CardButton.Content>\r\n            </CardButton>\r\n            <CardButton circular color=\"black\" animated=\"vertical\">\r\n              <CardButton.Content hidden>Dislike</CardButton.Content>\r\n              <CardButton.Content visible>\r\n                <Icon name='arrow down' />\r\n              </CardButton.Content>\r\n            </CardButton> */}\r\n            {/* </ButtonGroup> */}\r\n          </CardHeader>\r\n          {/* <HeartButtonRed\r\n                onClick={this.toggleLike}\r\n                style={\r\n                  this.state.liked === true\r\n                    ? { transitionDuration: \"1s \", backgroundPosition: \"-2800px 0\" }\r\n                    : { transitionDuration: \"0s\", backgroundPosition: \"0 0\" }\r\n                }\r\n              >\r\n              </HeartButtonRed> */}\r\n        </CardDetails>\r\n      </CardSegment>\r\n    );\r\n  }\r\n}\r\nexport default Card;\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js",["116","117"],"import React from \"react\";\r\nimport { Item, Image } from \"semantic-ui-react\";\r\n//Styles\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardHeader,\r\n  ModalContent,\r\n  ModalProfileLeft,\r\n  ModalProfileRight,\r\n  ModalProfileContent,\r\n  ModalHeading,\r\n  ModalSubHeading,\r\n  InfoIcon,\r\n  Icon,\r\n  IconGroup,\r\n  CancelButton,\r\n  RepoCard\r\n} from \"../styles/FriendCardStyle\";\r\n\r\n//React-Modal\r\nimport Modal from \"react-modal\";\r\nimport { style as ModalStyle } from \"../styles/ModalStyle\";\r\nimport avatar from \"../images/logopen3.svg\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\n//Icon\r\nimport { BsInfoCircle as Info, BsThreeDotsVertical as Dot } from \"react-icons/bs\";\r\nimport { VscGlobe, VscGithub } from \"react-icons/vsc\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { ImCancelCircle } from \"react-icons/im\";\r\n\r\n//github contribution chart\r\nimport { drawContributions } from \"github-contributions-canvas\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass FriendCard extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      modalIsOpen: false,\r\n      githubReps: [\r\n        \"OnlyMeal\",\r\n        \"Rapid-NPM-Package\",\r\n        \"Captcha-IMHUMAN\"\r\n      ]\r\n    };\r\n  }\r\n  \r\n  openModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: true\r\n      }, function () {\r\n        console.log(\"openModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  afterOpenModal = () => {\r\n    console.log(\"after model is opened\");\r\n  };\r\n  closeModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: false\r\n      }, function () {\r\n        console.log(\"closeModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  render() {\r\n    // fetching repos\r\n    const username=\"1s-0s\"\r\n    const repos = this.state.githubReps.map((reponame)=>{\r\n      const currrepo=`https://github-readme-stats.vercel.app/api/pin/?username=${username}&repo=${reponame}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`\r\n      return(\r\n        <RepoCard key={reponame} centered size=\"large\" src={currrepo}/>\r\n      )\r\n    })\r\n    return (\r\n      <Card raised>\r\n        <Item.Group divided >\r\n          <Item>\r\n            <Image alt={avatar} size=\"mini\" src={avatar} />\r\n            <Item.Content>\r\n              <CardHeader>\r\n                <Item.Header>\r\n                  Kavya Kulkarni\r\n                  <InfoIcon onClick={this.openModal}>\r\n                    <Dot/>\r\n                  </InfoIcon>\r\n                  \r\n                </Item.Header>\r\n                \r\n              </CardHeader>\r\n              <Item.Meta></Item.Meta>\r\n              <Item.Description>\r\n                <CardText>Hello,people I am Kavya Kulkarni.</CardText>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onAfterOpen={this.afterOpenModal}\r\n          style={ModalStyle}\r\n          contentLabel=\"Example Modal\">\r\n          <ModalContent>\r\n            {/*//? LEFT SECTION */}\r\n            <ModalProfileLeft>\r\n              <ModalProfileContent>\r\n                <Image src={ProfileImg} centered circular size=\"small\" />\r\n                <ModalHeading>\r\n                  Kavya Kulkarni\r\n                </ModalHeading>\r\n                <ModalSubHeading>A Happy Soul</ModalSubHeading>\r\n                <IconGroup>\r\n                  <Icon>\r\n                    <VscGlobe />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <VscGithub />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <FiTwitter />\r\n                  </Icon>\r\n                </IconGroup>\r\n\r\n                <CancelButton>\r\n                  <ImCancelCircle onClick={this.closeModal} />\r\n                </CancelButton>\r\n\r\n              </ModalProfileContent>\r\n\r\n            </ModalProfileLeft>\r\n            {/*//? RIGHT SECTION */}\r\n            <ModalProfileRight>\r\n              {repos}\r\n            </ModalProfileRight>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default FriendCard;\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js",["118"],"import styled from \"styled-components\";\r\nimport { Segment, Grid, Button } from \"semantic-ui-react\";\r\n\r\n\r\nexport const CardSegment = styled(Segment)`\r\n  @media (min-width: 991px) {\r\n    margin-top: 10vh !important;\r\n    margin-left: 4vw !important;\r\n    margin-right: 4vw !important;\r\n  }\r\n  /* background-color: #0D1117 ; */\r\n`;\r\nexport const CardDetails = styled.div`\r\n  margin-left: 1.5vh ;\r\n  margin-right: 1.5vh ;\r\n`;\r\nexport const CardHeader = styled.h3`\r\n  margin-top: 3vh !important;\r\n  margin-bottom: 0 ;\r\n`;\r\nexport const SubHeader = styled.p`\r\n  margin-top: 5vh !important;\r\n`;\r\nexport const GistSegment = styled.div`\r\n  height: 50vh ;\r\n  overflow-y:auto;\r\n`;\r\nexport const HeartButtonRed = styled.div`\r\n  width: 100px ;\r\n  height: 100px ;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: url(\"https://cssanimation.rocks/images/posts/steps/heart.png\") no-repeat ;\r\n  background-position: 0 0;\r\n  cursor: pointer;\r\n  transition: background-position 1s steps(28);\r\n  transition-duration: 0s ;\r\n`;\r\nexport const CardButton = styled(Button)`\r\n  margin-top: 0vh !important;\r\n  color: #EEE3E3;\r\n  &:hover{\r\n    color: #AAB8C2;;\r\n  }\r\n`;\r\nexport const ButtonGroup = styled.div`\r\n  margin-top: 0vh;\r\n  text-align:center;\r\n`;\r\n// export const ReactIcon = styled(Grid)`\r\n//   margin: auto auto;\r\n// `;","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js",[],["119","120"],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js",[],{"ruleId":"121","severity":1,"message":"122","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":24},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":7,"column":1,"nodeType":"131","endLine":19,"endColumn":2},{"ruleId":"129","severity":1,"message":"130","line":3,"column":1,"nodeType":"131","endLine":11,"endColumn":2},{"ruleId":"121","severity":1,"message":"132","line":14,"column":8,"nodeType":"123","messageId":"124","endLine":14,"endColumn":18},{"ruleId":"121","severity":1,"message":"133","line":2,"column":10,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"134","line":7,"column":3,"nodeType":"123","messageId":"124","endLine":7,"endColumn":12},{"ruleId":"121","severity":1,"message":"135","line":9,"column":3,"nodeType":"123","messageId":"124","endLine":9,"endColumn":14},{"ruleId":"121","severity":1,"message":"136","line":27,"column":26,"nodeType":"123","messageId":"124","endLine":27,"endColumn":30},{"ruleId":"121","severity":1,"message":"137","line":33,"column":10,"nodeType":"123","messageId":"124","endLine":33,"endColumn":27},{"ruleId":"121","severity":1,"message":"138","line":2,"column":19,"nodeType":"123","messageId":"124","endLine":2,"endColumn":23},{"ruleId":"125","replacedBy":"139"},{"ruleId":"127","replacedBy":"140"},"no-unused-vars","'CookiesProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["141"],"no-negated-in-lhs",["142"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ProfileImg' is defined but never used.","'Icon' is defined but never used.","'SubHeader' is defined but never used.","'ButtonGroup' is defined but never used.","'Info' is defined but never used.","'drawContributions' is defined but never used.","'Grid' is defined but never used.",["141"],["142"],"no-global-assign","no-unsafe-negation"]