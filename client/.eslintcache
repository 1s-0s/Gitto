[{"D:\\projects\\gitto\\Gitto\\client\\src\\index.js":"1","D:\\projects\\gitto\\Gitto\\client\\src\\App.js":"2","D:\\projects\\gitto\\Gitto\\client\\src\\store.js":"3","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js":"4","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js":"5","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js":"6","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js":"7","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js":"8","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js":"9","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js":"10","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js":"11","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js":"12","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js":"13","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js":"14","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js":"15","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js":"16","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js":"17","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js":"18","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js":"19","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js":"20","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js":"21","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\userDescription.js":"22"},{"size":283,"mtime":1616010563612,"results":"23","hashOfConfig":"24"},{"size":685,"mtime":1615716124799,"results":"25","hashOfConfig":"24"},{"size":470,"mtime":1615726195469,"results":"26","hashOfConfig":"24"},{"size":288,"mtime":1616167691684,"results":"27","hashOfConfig":"24"},{"size":2351,"mtime":1616179341898,"results":"28","hashOfConfig":"24"},{"size":474,"mtime":1616143319821,"results":"29","hashOfConfig":"24"},{"size":387,"mtime":1615922857501,"results":"30","hashOfConfig":"24"},{"size":1294,"mtime":1615922857499,"results":"31","hashOfConfig":"24"},{"size":2320,"mtime":1616179579639,"results":"32","hashOfConfig":"24"},{"size":1999,"mtime":1615922857757,"results":"33","hashOfConfig":"24"},{"size":6282,"mtime":1616167702170,"results":"34","hashOfConfig":"24"},{"size":4705,"mtime":1616143319822,"results":"35","hashOfConfig":"24"},{"size":683,"mtime":1615311692318,"results":"36","hashOfConfig":"24"},{"size":134,"mtime":1615829077551,"results":"37","hashOfConfig":"24"},{"size":4105,"mtime":1615987722557,"results":"38","hashOfConfig":"24"},{"size":1309,"mtime":1615983176397,"results":"39","hashOfConfig":"24"},{"size":480,"mtime":1616166195507,"results":"40","hashOfConfig":"24"},{"size":987,"mtime":1616157713321,"results":"41","hashOfConfig":"24"},{"size":1801,"mtime":1616167940042,"results":"42","hashOfConfig":"24"},{"size":2151,"mtime":1615985266595,"results":"43","hashOfConfig":"24"},{"size":567,"mtime":1615902019446,"results":"44","hashOfConfig":"24"},{"size":1064,"mtime":1616167676248,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"100x36k",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},"D:\\projects\\gitto\\Gitto\\client\\src\\index.js",[],["97","98"],"D:\\projects\\gitto\\Gitto\\client\\src\\App.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\store.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js",["99"],"import React from \"react\";\r\n\r\n// Action Creator\r\nimport { userDescription } from \"../../action/index\";\r\n\r\n//REACT-REDUX AND REDUX-FORM\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n//Semantic-ui\r\nimport { Form, Image } from 'semantic-ui-react';\r\n\r\n//Style-Component\r\nimport { Container, FormContainer, ImageContent, FormHeader, Header } from \"../styles/EditProStyle\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\n// import addUserDescription from \"../../reducer/addUserDescription\";\r\n\r\n\r\nlet languages;\r\nclass EditProfile extends React.Component {\r\n    state = {}\r\n    handleChange = (e, { value }) => this.setState({ value })\r\n    componentWillMount() {\r\n        this.setState({\r\n            options: [\r\n                { key: 'c', text: 'C', value: 'c' },\r\n                { key: 'c++', text: 'C++', value: 'c++' },\r\n                { key: 'java', text: 'Java', value: 'java' },\r\n                { key: 'go', text: 'Go', value: 'go' },\r\n                { key: 'html', text: 'HTML', value: 'html' },\r\n                { key: 'css', text: 'CSS', value: 'css' },\r\n                { key: 'javascript', text: 'Javascript', value: 'javascript' },\r\n                { key: 'typescript', text: 'Typescript', value: 'typescript' },\r\n                { key: 'shell', text: 'Shell', value: 'shell' },\r\n                { key: 'c#', text: 'C#', value: 'c#' },\r\n                { key: 'python', text: 'Python', value: 'python' },\r\n                { key: 'rails', text: 'Rails', value: 'rails' },\r\n                { key: 'react', text: 'React', value: 'react' },\r\n                { key: 'less', text: 'LESS', value: 'less' },\r\n                { key: 'ruby', text: 'Ruby', value: 'ruby' },\r\n                { key: 'scss', text: 'SCSS', value: 'scss' },\r\n                { key: 'kotlin', text: 'Kotlin', value: 'kotlin' },\r\n            ],\r\n            selected: \"\",\r\n            languages: []\r\n        })\r\n    }\r\n    renderBioField = (field) => {\r\n        //console.log(\"rendering Bio\");\r\n        return (\r\n            <Form.Input fluid type=\"text\" value=\"hey people\"{...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderLangField = (field) => {\r\n        return (\r\n            <Form.Dropdown fluid multiple selection {...field.input} onChange={(e, data) => {\r\n                return (data.value.length > 0) ? field.input.onChange(field.input) : field.input.onChange(\"\")\r\n            }}\r\n                value={\"cpp\"} options={this.state.options} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderProject1Field = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderProject2Field(field) {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderProject3Field(field) {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderGistField = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n\r\n\r\n    showData(e, data) {\r\n        if (languages === undefined || languages.length < 5) {\r\n            languages = data.value;\r\n            //console.log(\"from show data: \", languages.length);\r\n        } else {\r\n            console.log(\"language should not be more than 5!\", languages.length);\r\n        }\r\n    }\r\n    onSubmit(values) {\r\n        this.props.userDescription({ values })\r\n        //console.log(\"onSubmit\", values);\r\n        this.props.history.push(\"/dashboard/\");\r\n    }\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <Container>\r\n                <Header>\r\n                    <Image src={this.props.userData.avatar} circular centered size=\"tiny\" />\r\n                    <ImageContent>{this.props.userData.name}</ImageContent>\r\n                </Header>\r\n                <FormContainer>\r\n                    <Form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                        <FormHeader>Bio*</FormHeader>\r\n                        <Field required name=\"bio\" component={this.renderBioField} />\r\n                        <FormHeader>Top Languages* <em>(only 5)</em></FormHeader>\r\n                        <Form.Dropdown required fluid multiple selection options={this.state.options} onChange={this.showData} />\r\n                        <FormHeader>Repositry 1*</FormHeader>\r\n                        <Field required name=\"repositries1\" component={this.renderProject1Field} />\r\n                        <FormHeader>Repositry 2</FormHeader>\r\n                        <Field required name=\"repositries2\" component={this.renderProject2Field} />\r\n                        <FormHeader>Repositry 3</FormHeader>\r\n                        <Field required name=\"repositries3\" component={this.renderProject3Field} />\r\n                        <FormHeader>Gist Reference*</FormHeader>\r\n                        <Field required name=\"gist\" component={this.renderGistField} />\r\n                        <Form.Button color=\"black\">Submit</Form.Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction validate(values) {\r\n    values[\"languages\"] = languages;\r\n    // console.log(\"values\", values);\r\n    const error = {}\r\n    if (!values.bio) {\r\n        error.bio = \"Please enter a bio \";\r\n    }\r\n    if (!values.repositries1) {\r\n        error.repositries1 = \"Enter your top project\"\r\n    }\r\n    if (!values.gist) {\r\n        error.gist = \"Enter your gist reference\"\r\n    }\r\n    return error;\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ userDescription }, dispatch);\r\n}\r\nconst mapStateToProps = (state)=>{\r\n    return {\r\n        userData:state.userDescription\r\n    }\r\n}\r\nexport default reduxForm({\r\n    validate: validate,\r\n    form: \"addUserDetails\"\r\n})(\r\n    connect(mapStateToProps, mapDispatchToProps)(EditProfile)\r\n);","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js",["100","101"],"import React from \"react\";\r\nimport { Image, Statistic, Loader } from \"semantic-ui-react\";\r\nimport {\r\n    Container,\r\n    ProfileCard,\r\n    ImageContent,\r\n    ImageSubContent,\r\n    StatDesc,\r\n    StatNum,\r\n    Section,\r\n    ButtonLink,\r\n    Loading\r\n} from \"../styles/ProfileStyle\";\r\nimport { FaEdit as Edit } from \"react-icons/fa\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\nimport Axios from \"axios\";\r\n//to fetch data from cookie\r\nimport Cookies from 'js-cookie';\r\n\r\n// const contributionAPI = \"https://activity-graph.herokuapp.com/graph?username=Samridhi-98&theme=blue-green\";\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            userinfo: {},\r\n            userid: Cookies.get(\"userid\"),\r\n            loading: true\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        // console.log(\"cookie: \", this.state.userid);\r\n        //? proxy:5000 in package.json\r\n        Axios({\r\n            url: \"/userinfo/\" + this.state.userid,\r\n            method: \"GET\"\r\n        })\r\n            .then((response) => {\r\n                this.setState({ userinfo: response.data, loading: false }, () => {\r\n                    console.log(this.state.userinfo);\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"-----error while fetching user info---\", err);\r\n            })\r\n    }\r\n    render() {\r\n        if (this.state.loading === true) {\r\n            return (\r\n                <div>\r\n                    <Loading active size=\"large\"><strong>Loading</strong></Loading>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            const githubStat = `https://github-readme-stats.vercel.app/api?username=${this.state.userinfo.username}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`;\r\n            return (\r\n                <Container>\r\n                    <ProfileCard>\r\n                        <Image src={this.state.userinfo.avatar} circular centered size=\"small\" />\r\n                        <ImageContent>\r\n                            {this.state.userinfo.name}\r\n                            <ImageSubContent>\r\n                                <ButtonLink to=\"/dashboard/editprofile\">\r\n                                    <Edit />\r\n                                </ButtonLink>\r\n                            </ImageSubContent>\r\n                        </ImageContent>\r\n                        <Section vertical>\r\n                            <Statistic.Group widths=\"three\">\r\n                                <Statistic>\r\n                                    <Statistic.Value>\r\n                                        <StatNum>{this.state.userinfo.follower}</StatNum>\r\n                                        {/* <StatNum>10</StatNum> */}\r\n                                    </Statistic.Value>\r\n                                    <Statistic.Label>\r\n                                        <StatDesc>Followers</StatDesc>\r\n                                    </Statistic.Label>\r\n                                </Statistic>\r\n                                <Statistic>\r\n                                    <Statistic.Value>\r\n                                        <StatNum>{this.state.userinfo.following}</StatNum>\r\n                                        {/* <StatNum>20</StatNum> */}\r\n                                    </Statistic.Value>\r\n                                    <Statistic.Label>\r\n                                        <StatDesc>Followings</StatDesc>\r\n                                    </Statistic.Label>\r\n                                </Statistic>\r\n                                <Statistic>\r\n                                    <Statistic.Value>\r\n                                        <StatNum>{this.state.userinfo.repositry}</StatNum>\r\n                                        {/* <StatNum>51</StatNum> */}\r\n                                    </Statistic.Value>\r\n                                    <Statistic.Label>\r\n                                        <StatDesc>Repositries</StatDesc>\r\n                                    </Statistic.Label>\r\n                                </Statistic>\r\n                            </Statistic.Group>\r\n                        </Section>\r\n                        {/* https://github-readme-stats.vercel.app/api?username=Samridhi-98&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true */}\r\n                        {/* <Image src={} /> */}\r\n                        <Image src={githubStat} />\r\n                    </ProfileCard>\r\n                </Container>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default Profile;","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js",["102","103"],"import React from \"react\";\r\nimport { Item, Image } from \"semantic-ui-react\";\r\n//Styles\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardHeader,\r\n  ModalContent,\r\n  ModalProfileLeft,\r\n  ModalProfileRight,\r\n  ModalProfileContent,\r\n  ModalHeading,\r\n  ModalSubHeading,\r\n  InfoIcon,\r\n  Icon,\r\n  IconGroup,\r\n  CancelButton,\r\n  RepoCard\r\n} from \"../styles/FriendCardStyle\";\r\n\r\n//React-Modal\r\nimport Modal from \"react-modal\";\r\nimport { style as ModalStyle } from \"../styles/ModalStyle\";\r\nimport avatar from \"../images/logopen3.svg\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\n//Icon\r\nimport { BsInfoCircle as Info, BsThreeDotsVertical as Dot } from \"react-icons/bs\";\r\nimport { VscGlobe, VscGithub } from \"react-icons/vsc\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { ImCancelCircle } from \"react-icons/im\";\r\n\r\n//github contribution chart\r\nimport { drawContributions } from \"github-contributions-canvas\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass FriendCard extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      modalIsOpen: false,\r\n      githubReps: [\r\n        \"OnlyMeal\",\r\n        \"Rapid-NPM-Package\",\r\n        \"Captcha-IMHUMAN\"\r\n      ]\r\n    };\r\n  }\r\n  \r\n  openModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: true\r\n      }, function () {\r\n        console.log(\"openModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  afterOpenModal = () => {\r\n    console.log(\"after model is opened\");\r\n  };\r\n  closeModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: false\r\n      }, function () {\r\n        console.log(\"closeModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  render() {\r\n    // fetching repos\r\n    const username=\"1s-0s\"\r\n    const repos = this.state.githubReps.map((reponame)=>{\r\n      const currrepo=`https://github-readme-stats.vercel.app/api/pin/?username=${username}&repo=${reponame}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`\r\n      return(\r\n        <RepoCard key={reponame} centered size=\"large\" src={currrepo}/>\r\n      )\r\n    })\r\n    return (\r\n      <Card raised>\r\n        <Item.Group divided >\r\n          <Item>\r\n            <Image alt={avatar} size=\"mini\" src={avatar} />\r\n            <Item.Content>\r\n              <CardHeader>\r\n                <Item.Header>\r\n                  Kavya Kulkarni\r\n                  <InfoIcon onClick={this.openModal}>\r\n                    <Dot/>\r\n                  </InfoIcon>\r\n                  \r\n                </Item.Header>\r\n                \r\n              </CardHeader>\r\n              <Item.Meta></Item.Meta>\r\n              <Item.Description>\r\n                <CardText>Hello,people I am Kavya Kulkarni.</CardText>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onAfterOpen={this.afterOpenModal}\r\n          style={ModalStyle}\r\n          contentLabel=\"Example Modal\">\r\n          <ModalContent>\r\n            {/*//? LEFT SECTION */}\r\n            <ModalProfileLeft>\r\n              <ModalProfileContent>\r\n                <Image src={ProfileImg} centered circular size=\"small\" />\r\n                <ModalHeading>\r\n                  Kavya Kulkarni\r\n                </ModalHeading>\r\n                <ModalSubHeading>A Happy Soul</ModalSubHeading>\r\n                <IconGroup>\r\n                  <Icon>\r\n                    <VscGlobe />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <VscGithub />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <FiTwitter />\r\n                  </Icon>\r\n                </IconGroup>\r\n\r\n                <CancelButton>\r\n                  <ImCancelCircle onClick={this.closeModal} />\r\n                </CancelButton>\r\n\r\n              </ModalProfileContent>\r\n\r\n            </ModalProfileLeft>\r\n            {/*//? RIGHT SECTION */}\r\n            <ModalProfileRight>\r\n              {repos}\r\n            </ModalProfileRight>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default FriendCard;\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js",["104"],"import styled from \"styled-components\";\r\nimport { Segment, Grid, Button } from \"semantic-ui-react\";\r\n\r\n\r\nexport const CardSegment = styled(Segment)`\r\n  @media (min-width: 991px) {\r\n    margin-top: 10vh !important;\r\n    margin-left: 4vw !important;\r\n    margin-right: 4vw !important;\r\n  }\r\n  /* background-color: #0D1117 ; */\r\n`;\r\nexport const CardDetails = styled.div`\r\n  margin-left: 1.5vh ;\r\n  margin-right: 1.5vh ;\r\n`;\r\nexport const CardHeader = styled.h3`\r\n  margin-top: 3vh !important;\r\n  margin-bottom: 0 ;\r\n`;\r\nexport const SubHeader = styled.p`\r\n  margin-top: 5vh !important;\r\n`;\r\nexport const GistSegment = styled.div`\r\n  height: 50vh ;\r\n  overflow-y:auto;\r\n`;\r\nexport const HeartButtonRed = styled.div`\r\n  width: 100px ;\r\n  height: 100px ;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: url(\"https://cssanimation.rocks/images/posts/steps/heart.png\") no-repeat ;\r\n  background-position: 0 0;\r\n  cursor: pointer;\r\n  transition: background-position 1s steps(28);\r\n  transition-duration: 0s ;\r\n`;\r\nexport const CardButton = styled(Button)`\r\n  margin-top: 0vh !important;\r\n  color: #EEE3E3;\r\n  &:hover{\r\n    color: #AAB8C2;;\r\n  }\r\n`;\r\nexport const ButtonGroup = styled.div`\r\n  margin-top: 0vh;\r\n  text-align:center;\r\n`;\r\n// export const ReactIcon = styled(Grid)`\r\n//   margin: auto auto;\r\n// `;","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js",["105"],"import styled from \"styled-components\";\r\nimport { Segment,Form } from \"semantic-ui-react\";\r\nimport ModalCardBg from \"../images/friendCard/friendCardBg2.svg\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 5vh 2vh !important;\r\n`;\r\n\r\nexport const FormContainer = styled(Segment)`\r\n  background-color:rgba(0,77,64,0.4)  !important;\r\n  -webkit-box-shadow:0 0 20px rgba(0,77,64,0.4);\r\n  -moz-box-shadow:0 0 20px rgba(0,77,64,0.4);\r\n  box-shadow:0 0 20px rgba(0,77,64,0.4);  \r\n`;\r\nexport const ImageContent = styled.p`\r\n  font-size: 1.5em !important;\r\n  text-align:center;\r\n  color:#EEE3E3;\r\n`;\r\nexport const FormHeader = styled.h5`\r\n  margin-bottom: 0.5em;\r\n  color:#EEE3E3;\r\n`;\r\nexport const Header = styled.div`\r\n  background-image:linear-gradient(rgba(0,77,64, 0.7),rgba(0,77,64, 0.7)),url(${ModalCardBg});\r\n  background-size: cover;\r\n  background-position: center;\r\n  padding:1vh !important;\r\n  height: 20vh !important;\r\n  /* width:100%;\r\n  height: 100% !important; */\r\n`;\r\n//FORM\r\n\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\userDescription.js",["106","107"],"import { USER_DESCRIPTION,SAVE_USER_DATA } from \"../action/index\";\r\nimport axios from \"axios\";\r\n//to fetch data from cookie\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DESCRIPTION:\r\n            const userid = Cookies.get(\"userid\");\r\n            console.log(\"from axios: \", userid);\r\n            axios({\r\n                url: \"/userinfo/\" + userid + \"/update\",\r\n                method: \"POST\",\r\n                data: action.payload.values\r\n            })\r\n                .then(() => {\r\n                    console.log(\"successfully updated data\");\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error while updating user data \", err);\r\n                })\r\n            // console.log(\"reducers: \",action.payload.values);\r\n            return state;\r\n          case SAVE_USER_DATA:\r\n            state=action.payload.values  \r\n            console.log(\"saving state with data : \",state);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n",{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":16,"column":8,"nodeType":"114","messageId":"115","endLine":16,"endColumn":18},{"ruleId":"112","severity":1,"message":"116","line":2,"column":28,"nodeType":"114","messageId":"115","endLine":2,"endColumn":34},{"ruleId":"112","severity":1,"message":"113","line":15,"column":8,"nodeType":"114","messageId":"115","endLine":15,"endColumn":18},{"ruleId":"112","severity":1,"message":"117","line":27,"column":26,"nodeType":"114","messageId":"115","endLine":27,"endColumn":30},{"ruleId":"112","severity":1,"message":"118","line":33,"column":10,"nodeType":"114","messageId":"115","endLine":33,"endColumn":27},{"ruleId":"112","severity":1,"message":"119","line":2,"column":19,"nodeType":"114","messageId":"115","endLine":2,"endColumn":23},{"ruleId":"112","severity":1,"message":"120","line":2,"column":18,"nodeType":"114","messageId":"115","endLine":2,"endColumn":22},{"ruleId":"121","severity":1,"message":"122","line":7,"column":1,"nodeType":"123","endLine":31,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":28,"column":9,"nodeType":"126","messageId":"127","endLine":29,"endColumn":26},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'ProfileImg' is defined but never used.","Identifier","unusedVar","'Loader' is defined but never used.","'Info' is defined but never used.","'drawContributions' is defined but never used.","'Grid' is defined but never used.","'Form' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-fallthrough","Expected a 'break' statement before 'default'.","SwitchCase","default","no-global-assign","no-unsafe-negation"]