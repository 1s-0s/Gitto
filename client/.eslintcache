[{"D:\\projects\\gitto\\Gitto\\client\\src\\index.js":"1","D:\\projects\\gitto\\Gitto\\client\\src\\store.js":"2","D:\\projects\\gitto\\Gitto\\client\\src\\App.js":"3","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js":"4","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js":"5","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js":"6","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js":"7","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js":"8","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js":"9","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js":"10","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js":"11","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js":"12","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js":"13","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js":"14","D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js":"15","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js":"16","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js":"17","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js":"18","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js":"19","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js":"20","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js":"21","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js":"22"},{"size":281,"mtime":1615726450108,"results":"23","hashOfConfig":"24"},{"size":470,"mtime":1615726195469,"results":"25","hashOfConfig":"24"},{"size":685,"mtime":1615716124799,"results":"26","hashOfConfig":"24"},{"size":373,"mtime":1615737305554,"results":"27","hashOfConfig":"24"},{"size":461,"mtime":1615309537171,"results":"28","hashOfConfig":"24"},{"size":1059,"mtime":1615717195665,"results":"29","hashOfConfig":"24"},{"size":381,"mtime":1615808215565,"results":"30","hashOfConfig":"24"},{"size":298,"mtime":1615735874532,"results":"31","hashOfConfig":"24"},{"size":1155,"mtime":1615734782450,"results":"32","hashOfConfig":"24"},{"size":403,"mtime":1615829169413,"results":"33","hashOfConfig":"24"},{"size":683,"mtime":1615311692318,"results":"34","hashOfConfig":"24"},{"size":1958,"mtime":1615716124852,"results":"35","hashOfConfig":"24"},{"size":1623,"mtime":1615739536490,"results":"36","hashOfConfig":"24"},{"size":8625,"mtime":1615812278177,"results":"37","hashOfConfig":"24"},{"size":185,"mtime":1615639749768,"results":"38","hashOfConfig":"24"},{"size":221,"mtime":1615725250062,"results":"39","hashOfConfig":"24"},{"size":609,"mtime":1615808219820,"results":"40","hashOfConfig":"24"},{"size":134,"mtime":1615829077551,"results":"41","hashOfConfig":"24"},{"size":940,"mtime":1615739155853,"results":"42","hashOfConfig":"24"},{"size":1840,"mtime":1615833898051,"results":"43","hashOfConfig":"24"},{"size":543,"mtime":1615829069775,"results":"44","hashOfConfig":"24"},{"size":571,"mtime":1615835149703,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"100x36k",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\gitto\\Gitto\\client\\src\\index.js",[],["94","95"],"D:\\projects\\gitto\\Gitto\\client\\src\\store.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\App.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js",["96"],"import { ADD_USER } from \"../action/authAction\";\r\n\r\nconst initialState = {\r\n    user: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js",["97"],"import {USER_DESCRIPTION} from \"../action/index\";\r\n\r\nexport default (state=[],action) => {\r\n    switch(action.type){\r\n        case USER_DESCRIPTION : \r\n            console.log(\"user description reducer working\");\r\n            return state;\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js",["98","99"],"import React from \"react\";\r\n\r\n// Action Creator\r\nimport { userDescription } from \"../../action/index\";\r\n\r\n//REACT-REDUX AND REDUX-FORM\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n//Semantic-ui\r\nimport { Form, Message, Image, Header } from 'semantic-ui-react';\r\n\r\n//Style-Component\r\nimport { Container, FormContainer, ImageContent, FormHeader } from \"../styles/ProfileStyle\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\n\r\n\r\nlet languages;\r\nclass Profile extends React.Component {\r\n    state = {}\r\n    handleChange = (e, { value }) => this.setState({ value })\r\n    componentWillMount() {\r\n        this.setState({\r\n            \r\n            options: [\r\n                { key: 'angular', text: 'Angular', value: 'angular' },\r\n                { key: 'css', text: 'CSS', value: 'css' },\r\n                { key: 'design', text: 'Graphic Design', value: 'design' },\r\n                { key: 'ember', text: 'Ember', value: 'ember' },\r\n                { key: 'html', text: 'HTML', value: 'html' },\r\n                { key: 'ia', text: 'Information Architecture', value: 'ia' },\r\n                { key: 'javascript', text: 'Javascript', value: 'javascript' },\r\n                { key: 'typescript', text: 'typescript', value: 'typescript' },\r\n                { key: 'node', text: 'NodeJS', value: 'node' },\r\n                { key: 'plumbing', text: 'Plumbing', value: 'plumbing' },\r\n                { key: 'python', text: 'Python', value: 'python' },\r\n                { key: 'rails', text: 'Rails', value: 'rails' },\r\n                { key: 'react', text: 'React', value: 'react' },\r\n                { key: 'repair', text: 'Kitchen Repair', value: 'repair' },\r\n                { key: 'ruby', text: 'Ruby', value: 'ruby' },\r\n                { key: 'ui', text: 'UI Design', value: 'ui' },\r\n                { key: 'ux', text: 'User Experience', value: 'ux' },\r\n            ],\r\n            selected: \"angular\",\r\n            languages:[]\r\n        })\r\n    }\r\n    renderBioField = (field) => {\r\n        console.log(\"rendering Bio\");\r\n        return (\r\n            <Form.Input fluid type=\"text\" {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderLangField = (field) => {\r\n        // console.log(\"this is values: \",this.state.values);\r\n        return (\r\n            <Form.Dropdown fluid multiple selection {...field.input} onChange={(e,data)=>{\r\n                return (data.value.length>0) ? field.input.onChange(field.input) : field.input.onChange(\"\")\r\n            }}\r\n            value={\"cpp\"}  options={this.state.options} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderLang1Field = (field) => {\r\n        return (\r\n            <select className=\"ui fluid dropdown\" {...field.input} error={field.meta.touched ? field.meta.error : null}>\r\n                <option key=\"\" value=\"\" disabled=\"disabled\">Language 1</option>\r\n                <option key=\"C\" value=\"C\">C</option>\r\n                <option key=\"C++\" value=\"C++\">C++</option>\r\n                <option key=\"Java\" value=\"Java\">Java</option>\r\n                <option key=\"Python\" value=\"Python\">Python</option>\r\n                <option key=\"HTML\" value=\"HTML\">HTML</option>\r\n                <option key=\"CSS\" value=\"CSS\">CSS</option>\r\n                <option key=\"Javascript\" value=\"Javascript\">Javascript</option>\r\n                <option key=\"Typescript\" value=\"Typescript\">Typescript</option>\r\n                <option key=\"Kotlin\" value=\"Kotlin\">Kotlin</option>\r\n                <option key=\"Go\" value=\"Go\">Go</option>\r\n                <option key=\"Ruby\" value=\"Ruby\">Ruby</option>\r\n            </select>\r\n        );\r\n    }\r\n    renderLang2Field = (field) => {\r\n        return (\r\n            <select className=\"ui fluid dropdown\" {...field.input} error={field.meta.touched ? field.meta.error : null}>\r\n                <option key=\"\" value=\"\" disabled=\"disabled\">Language 2</option>\r\n                <option key=\"C\" value=\"C\">C</option>\r\n                <option key=\"C++\" value=\"C++\">C++</option>\r\n                <option key=\"Java\" value=\"Java\">Java</option>\r\n                <option key=\"Python\" value=\"Python\">Python</option>\r\n                <option key=\"HTML\" value=\"HTML\">HTML</option>\r\n                <option key=\"CSS\" value=\"CSS\">CSS</option>\r\n                <option key=\"Javascript\" value=\"Javascript\">Javascript</option>\r\n                <option key=\"Typescript\" value=\"Typescript\">Typescript</option>\r\n                <option key=\"Kotlin\" value=\"Kotlin\">Kotlin</option>\r\n                <option key=\"Go\" value=\"Go\">Go</option>\r\n                <option key=\"Ruby\" value=\"Ruby\">Ruby</option>\r\n            </select>\r\n        );\r\n    }\r\n    renderLang3Field = (field) => {\r\n        return (\r\n            <select className=\"ui fluid dropdown\" {...field.input} error={field.meta.touched ? field.meta.error : null}>\r\n                <option key=\"\" value=\"\" disabled=\"disabled\">Language 3</option>\r\n                <option key=\"C\" value=\"C\">C</option>\r\n                <option key=\"C++\" value=\"C++\">C++</option>\r\n                <option key=\"Java\" value=\"Java\">Java</option>\r\n                <option key=\"Python\" value=\"Python\">Python</option>\r\n                <option key=\"HTML\" value=\"HTML\">HTML</option>\r\n                <option key=\"CSS\" value=\"CSS\">CSS</option>\r\n                <option key=\"Javascript\" value=\"Javascript\">Javascript</option>\r\n                <option key=\"Typescript\" value=\"Typescript\">Typescript</option>\r\n                <option key=\"Kotlin\" value=\"Kotlin\">Kotlin</option>\r\n                <option key=\"Go\" value=\"Go\">Go</option>\r\n                <option key=\"Ruby\" value=\"Ruby\">Ruby</option>\r\n            </select>\r\n        );\r\n    }\r\n    renderProjectField = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderAdditionalField(field) {\r\n        return (\r\n            <Form.TextArea  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    onSubmit(values) {\r\n        console.log(\"onSubmit\", values);\r\n    }\r\n    showData(e,data){\r\n        languages=data.value;\r\n        console.log(\"from show data: \",languages);\r\n    }\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <Container>\r\n                <Image src={ProfileImg} circular centered size=\"tiny\" />\r\n                <ImageContent>Dhruv Sehgal</ImageContent>\r\n                <FormContainer>\r\n                    <Form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                        <FormHeader>Bio</FormHeader>\r\n                        <Field required name=\"bio\" component={this.renderBioField} />\r\n                        <FormHeader>Top Languages</FormHeader>\r\n                        <Form.Dropdown required fluid multiple selection options={this.state.options} onChange={this.showData} />\r\n                        {/* <Field required name=\"language\" component={this.renderLangField} /> */}\r\n                        {/* <Form.Group widths=\"\">\r\n                            <Field required name=\"language1\" component={this.renderLang1Field} />\r\n                            <Field required name=\"language2\" component={this.renderLang2Field} />\r\n                            <Field required name=\"language3\" component={this.renderLang3Field} />\r\n                        </Form.Group> */}\r\n                        <FormHeader>Projects</FormHeader>\r\n                        <Field required name=\"project\" component={this.renderProjectField} />\r\n                        <FormHeader>Additional Info</FormHeader>\r\n                        <Field name=\"additional\" component={this.renderAdditionalField} />\r\n                        <Form.Button color=\"black\">Submit</Form.Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction validate(values) {\r\n    values[\"languages\"]=languages;\r\n    //console.log(values.bio);\r\n    console.log(\"values\", values);\r\n    const error = {}\r\n    if (!values.bio || values.bio.length > 20) {\r\n        error.bio = \"Please enter a bio\";\r\n    }\r\n    if (!values.project) {\r\n        error.project = \"Enter your top project\"\r\n    }\r\n    return error;\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ userDescription }, dispatch);\r\n}\r\nexport default reduxForm({\r\n    validate: validate,\r\n    form: \"addUserDetails\"\r\n})(\r\n    connect(null, mapDispatchToProps)(Profile)\r\n);","D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":7,"column":1,"nodeType":"106","endLine":19,"endColumn":2},{"ruleId":"104","severity":1,"message":"105","line":3,"column":1,"nodeType":"106","endLine":11,"endColumn":2},{"ruleId":"107","severity":1,"message":"108","line":12,"column":16,"nodeType":"109","messageId":"110","endLine":12,"endColumn":23},{"ruleId":"107","severity":1,"message":"111","line":12,"column":32,"nodeType":"109","messageId":"110","endLine":12,"endColumn":38},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'Message' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","no-global-assign","no-unsafe-negation"]