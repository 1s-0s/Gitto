[{"D:\\projects\\gitto\\Gitto\\client\\src\\index.js":"1","D:\\projects\\gitto\\Gitto\\client\\src\\store.js":"2","D:\\projects\\gitto\\Gitto\\client\\src\\App.js":"3","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js":"4","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js":"5","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js":"6","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js":"7","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js":"8","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js":"9","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js":"10","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js":"11","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js":"12","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js":"13","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js":"14","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js":"15","D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js":"16","D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js":"17","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js":"18","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js":"19","D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js":"20","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js":"21","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js":"22","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js":"23","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js":"24"},{"size":283,"mtime":1616010563612,"results":"25","hashOfConfig":"26"},{"size":470,"mtime":1615726195469,"results":"27","hashOfConfig":"26"},{"size":685,"mtime":1615716124799,"results":"28","hashOfConfig":"26"},{"size":373,"mtime":1615737305554,"results":"29","hashOfConfig":"26"},{"size":1191,"mtime":1615836871908,"results":"30","hashOfConfig":"26"},{"size":461,"mtime":1615309537171,"results":"31","hashOfConfig":"26"},{"size":873,"mtime":1616095027692,"results":"32","hashOfConfig":"26"},{"size":381,"mtime":1615808215565,"results":"33","hashOfConfig":"26"},{"size":6247,"mtime":1616094809357,"results":"34","hashOfConfig":"26"},{"size":4113,"mtime":1616071508982,"results":"35","hashOfConfig":"26"},{"size":387,"mtime":1615922857501,"results":"36","hashOfConfig":"26"},{"size":683,"mtime":1615311692318,"results":"37","hashOfConfig":"26"},{"size":1294,"mtime":1615922857499,"results":"38","hashOfConfig":"26"},{"size":1999,"mtime":1615922857757,"results":"39","hashOfConfig":"26"},{"size":2273,"mtime":1616072007228,"results":"40","hashOfConfig":"26"},{"size":221,"mtime":1615725250062,"results":"41","hashOfConfig":"26"},{"size":185,"mtime":1615639749768,"results":"42","hashOfConfig":"26"},{"size":972,"mtime":1615994701114,"results":"43","hashOfConfig":"26"},{"size":134,"mtime":1615829077551,"results":"44","hashOfConfig":"26"},{"size":4105,"mtime":1615987722557,"results":"45","hashOfConfig":"26"},{"size":1673,"mtime":1615923587853,"results":"46","hashOfConfig":"26"},{"size":1309,"mtime":1615983176397,"results":"47","hashOfConfig":"26"},{"size":2151,"mtime":1615985266595,"results":"48","hashOfConfig":"26"},{"size":567,"mtime":1615902019446,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"100x36k",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"D:\\projects\\gitto\\Gitto\\client\\src\\index.js",[],["106","107"],"D:\\projects\\gitto\\Gitto\\client\\src\\store.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\App.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Dashboard.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Login.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\addUserDescription.js",["108"],"import {USER_DESCRIPTION} from \"../action/index\";\r\nimport axios  from  \"axios\";\r\n//to fetch data from cookie\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default (state=[],action) => {\r\n    switch(action.type){\r\n        case USER_DESCRIPTION :\r\n            const userid = Cookies.get(\"userid\");\r\n            console.log(\"from axios: \",userid);\r\n            axios({\r\n                url:\"/userinfo/\"+userid+\"/update\",\r\n                method:\"POST\",\r\n                data:action.payload.values\r\n            })\r\n            .then(()=>{\r\n                console.log(\"successfully updated data\");\r\n            })\r\n            .catch((err)=>{\r\n                console.log(\"error while updating user data \",err);\r\n            }) \r\n            // console.log(\"reducers: \",action.payload.values);\r\n            return state;\r\n        default : \r\n            return state;\r\n    }\r\n}\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\reducer\\authReducer.js",["109"],"import { ADD_USER } from \"../action/authAction\";\r\n\r\nconst initialState = {\r\n    user: {}\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER: {\r\n            return {\r\n                ...state,\r\n                user: action.payload\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\EditProfile.js",["110"],"import React from \"react\";\r\n\r\n// Action Creator\r\nimport { userDescription } from \"../../action/index\";\r\n\r\n//REACT-REDUX AND REDUX-FORM\r\nimport { bindActionCreators } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n//Semantic-ui\r\nimport { Form, Image } from 'semantic-ui-react';\r\n\r\n//Style-Component\r\nimport { Container, FormContainer, ImageContent, FormHeader,Header } from \"../styles/EditProStyle\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\nimport addUserDescription from \"../../reducer/addUserDescription\";\r\n\r\n\r\nlet languages;\r\nclass EditProfile extends React.Component {\r\n    state = {}\r\n    handleChange = (e, { value }) => this.setState({ value })\r\n    componentWillMount() {\r\n        this.setState({\r\n            options: [\r\n                { key: 'c', text: 'C', value: 'c' },\r\n                { key: 'c++', text: 'C++', value: 'c++' },\r\n                { key: 'java', text: 'Java', value: 'java' },\r\n                { key: 'go', text: 'Go', value: 'go' },\r\n                { key: 'html', text: 'HTML', value: 'html' },\r\n                { key: 'css', text: 'CSS', value: 'css' },\r\n                { key: 'javascript', text: 'Javascript', value: 'javascript' },\r\n                { key: 'typescript', text: 'Typescript', value: 'typescript' },\r\n                { key: 'shell', text: 'Shell', value: 'shell' },\r\n                { key: 'c#', text: 'C#', value: 'c#' },\r\n                { key: 'python', text: 'Python', value: 'python' },\r\n                { key: 'rails', text: 'Rails', value: 'rails' },\r\n                { key: 'react', text: 'React', value: 'react' },\r\n                { key: 'less', text: 'LESS', value: 'less' },\r\n                { key: 'ruby', text: 'Ruby', value: 'ruby' },\r\n                { key: 'scss', text: 'SCSS', value: 'scss' },\r\n                { key: 'kotlin', text: 'Kotlin', value: 'kotlin' },\r\n            ],\r\n            selected: \"\",\r\n            languages: []\r\n        })\r\n    }\r\n    renderBioField = (field) => {\r\n        //console.log(\"rendering Bio\");\r\n        return (\r\n            <Form.Input fluid type=\"text\" value=\"hey people\"{...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderDesignationField = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\" {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderLangField = (field) => {\r\n        return (\r\n            <Form.Dropdown fluid multiple selection {...field.input} onChange={(e, data) => {\r\n                return (data.value.length > 0) ? field.input.onChange(field.input) : field.input.onChange(\"\")\r\n            }}\r\n                value={\"cpp\"} options={this.state.options} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderProjectField = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderGistField = (field) => {\r\n        return (\r\n            <Form.Input fluid type=\"text\"  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    renderAdditionalField(field) {\r\n        return (\r\n            <Form.TextArea  {...field.input} error={field.meta.touched ? field.meta.error : null} />\r\n        );\r\n    }\r\n    \r\n    showData(e, data) {\r\n        if (languages === undefined || languages.length < 5) {\r\n            languages = data.value;\r\n            //console.log(\"from show data: \", languages.length);\r\n        } else {\r\n            console.log(\"language should not be more than 5!\", languages.length);\r\n        }\r\n    }\r\n    onSubmit(values) {\r\n        this.props.userDescription({values})\r\n        //console.log(\"onSubmit\", values);\r\n\r\n        this.props.history.push(\"/dashboard/profile\");\r\n    }\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        return (\r\n            <Container>\r\n                <Header>\r\n                    <Image src={ProfileImg} circular centered size=\"tiny\" />\r\n                    <ImageContent>Dhruv Sehgal</ImageContent>\r\n                </Header>\r\n                <FormContainer>\r\n                    <Form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                        <FormHeader>Bio*</FormHeader>\r\n                        <Field required name=\"bio\" component={this.renderBioField} />\r\n                        <FormHeader>Designation*</FormHeader>\r\n                        <Field required name=\"designation\" component={this.renderDesignationField} />\r\n                        <FormHeader>Top Languages* <em>(only 5)</em></FormHeader>\r\n                        <Form.Dropdown required fluid multiple selection options={this.state.options} onChange={this.showData} />\r\n                        <FormHeader>Projects*</FormHeader>\r\n                        <Field required name=\"repositries\" component={this.renderProjectField} />\r\n                        <FormHeader>Gist Reference*</FormHeader>\r\n                        <Field required name=\"gist\" component={this.renderGistField} />\r\n                        <FormHeader>Additional Info <em>(optional)</em></FormHeader>\r\n                        <Field name=\"additional\" component={this.renderAdditionalField} />\r\n                        <Form.Button color=\"black\">Submit</Form.Button>\r\n                    </Form>\r\n                </FormContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nfunction validate(values) {\r\n    values[\"languages\"] = languages;\r\n    // console.log(\"values\", values);\r\n    const error = {}\r\n    if (!values.bio) {\r\n        error.bio = \"Please enter a bio \";\r\n    }\r\n    if (!values.designation) {\r\n        error.designation = \"Please enter your designation \";\r\n    }\r\n    if (!values.project) {\r\n        error.project = \"Enter your top project\"\r\n    }\r\n    if (!values.gist) {\r\n        error.gist = \"Enter your gist reference\"\r\n    }\r\n    return error;\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return bindActionCreators({ userDescription }, dispatch);\r\n}\r\n\r\nexport default reduxForm({\r\n    validate: validate,\r\n    form: \"addUserDetails\"\r\n})(\r\n    connect(null, mapDispatchToProps)(EditProfile)\r\n);","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\Profile.js",["111"],"import React from \"react\";\r\nimport { Image, Statistic } from \"semantic-ui-react\";\r\nimport {\r\n    Container,\r\n    ProfileCard,\r\n    ImageContent,\r\n    ImageSubContent,\r\n    StatDesc,\r\n    StatNum,\r\n    Section,\r\n    ButtonLink\r\n} from \"../styles/ProfileStyle\";\r\nimport { FaEdit as Edit } from \"react-icons/fa\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\nimport Axios from \"axios\";\r\n//to fetch data from cookie\r\nimport Cookies from 'js-cookie';\r\n\r\n// const contributionAPI = \"https://activity-graph.herokuapp.com/graph?username=Samridhi-98&theme=blue-green\";\r\nclass Profile extends React.Component {\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state={\r\n            userinfo:{},\r\n            userid:Cookies.get(\"userid\")\r\n        }\r\n        \r\n    }\r\n    componentDidMount(){\r\n        //? proxy:5000 in package.json\r\n        Axios({\r\n            url:\"/userinfo/\"+this.state.userid,\r\n            method:\"GET\"\r\n        })\r\n        .then((response)=>{\r\n            \r\n            this.setState({userinfo:response.data},()=>{\r\n                console.log(this.state.userinfo);\r\n            });\r\n        })\r\n        .catch((err)=>{\r\n            console.log(\"-----error while fetching user info---\",err);\r\n        })\r\n    }\r\n    render() {\r\n        const githubStat = `https://github-readme-stats.vercel.app/api?username=${this.state.userinfo.username}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`;\r\n        return (\r\n            <Container>\r\n                <ProfileCard>\r\n                    <Image src={this.state.userinfo.avatar} circular centered size=\"small\" />\r\n                    <ImageContent>\r\n                        {this.state.userinfo.name}\r\n                        <ImageSubContent>\r\n                            <ButtonLink to=\"/dashboard/editprofile\">\r\n                                <Edit />\r\n                            </ButtonLink>\r\n                        </ImageSubContent>\r\n                    </ImageContent>\r\n\r\n\r\n                    <Section vertical>\r\n                        <Statistic.Group widths=\"three\">\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.follower}</StatNum>\r\n                                    {/* <StatNum>10</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Followers</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.following}</StatNum>\r\n                                    {/* <StatNum>20</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Followings</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                            <Statistic>\r\n                                <Statistic.Value>\r\n                                    <StatNum>{this.state.userinfo.repositry}</StatNum>\r\n                                    {/* <StatNum>51</StatNum> */}\r\n                                </Statistic.Value>\r\n                                <Statistic.Label>\r\n                                    <StatDesc>Repositries</StatDesc>\r\n                                </Statistic.Label>\r\n                            </Statistic>\r\n                        </Statistic.Group>\r\n                    </Section>\r\n                    {/* https://github-readme-stats.vercel.app/api?username=Samridhi-98&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true */}\r\n                    {/* <Image src={} /> */}\r\n                    <Image src={githubStat} />\r\n                </ProfileCard>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","D:\\projects\\gitto\\Gitto\\client\\src\\components\\routes\\FriendList.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\LoginStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Sidebar.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\DashboardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\Cards.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\action\\index.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\action\\authAction.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\EditProStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\elements\\FriendCard.js",["112","113"],"import React from \"react\";\r\nimport { Item, Image } from \"semantic-ui-react\";\r\n//Styles\r\nimport {\r\n  Card,\r\n  CardText,\r\n  CardHeader,\r\n  ModalContent,\r\n  ModalProfileLeft,\r\n  ModalProfileRight,\r\n  ModalProfileContent,\r\n  ModalHeading,\r\n  ModalSubHeading,\r\n  InfoIcon,\r\n  Icon,\r\n  IconGroup,\r\n  CancelButton,\r\n  RepoCard\r\n} from \"../styles/FriendCardStyle\";\r\n\r\n//React-Modal\r\nimport Modal from \"react-modal\";\r\nimport { style as ModalStyle } from \"../styles/ModalStyle\";\r\nimport avatar from \"../images/logopen3.svg\";\r\nimport ProfileImg from \"../images/profile.jpg\";\r\n//Icon\r\nimport { BsInfoCircle as Info, BsThreeDotsVertical as Dot } from \"react-icons/bs\";\r\nimport { VscGlobe, VscGithub } from \"react-icons/vsc\";\r\nimport { FiTwitter } from \"react-icons/fi\";\r\nimport { ImCancelCircle } from \"react-icons/im\";\r\n\r\n//github contribution chart\r\nimport { drawContributions } from \"github-contributions-canvas\";\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nclass FriendCard extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      modalIsOpen: false,\r\n      githubReps: [\r\n        \"OnlyMeal\",\r\n        \"Rapid-NPM-Package\",\r\n        \"Captcha-IMHUMAN\"\r\n      ]\r\n    };\r\n  }\r\n  \r\n  openModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: true\r\n      }, function () {\r\n        console.log(\"openModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  afterOpenModal = () => {\r\n    console.log(\"after model is opened\");\r\n  };\r\n  closeModal = () => {\r\n    this\r\n      .setState({\r\n        modalIsOpen: false\r\n      }, function () {\r\n        console.log(\"closeModal: \", this.state.modalIsOpen);\r\n      });\r\n  };\r\n  render() {\r\n    // fetching repos\r\n    const username=\"1s-0s\"\r\n    const repos = this.state.githubReps.map((reponame)=>{\r\n      const currrepo=`https://github-readme-stats.vercel.app/api/pin/?username=${username}&repo=${reponame}&show_icons=true&theme=blue-green&line_height=27&title_color=FFFFFF&bg_color=001E19&hide_border=true`\r\n      return(\r\n        <RepoCard key={reponame} centered size=\"large\" src={currrepo}/>\r\n      )\r\n    })\r\n    return (\r\n      <Card raised>\r\n        <Item.Group divided >\r\n          <Item>\r\n            <Image alt={avatar} size=\"mini\" src={avatar} />\r\n            <Item.Content>\r\n              <CardHeader>\r\n                <Item.Header>\r\n                  Kavya Kulkarni\r\n                  <InfoIcon onClick={this.openModal}>\r\n                    <Dot/>\r\n                  </InfoIcon>\r\n                  \r\n                </Item.Header>\r\n                \r\n              </CardHeader>\r\n              <Item.Meta></Item.Meta>\r\n              <Item.Description>\r\n                <CardText>Hello,people I am Kavya Kulkarni.</CardText>\r\n              </Item.Description>\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n        <Modal\r\n          isOpen={this.state.modalIsOpen}\r\n          onAfterOpen={this.afterOpenModal}\r\n          style={ModalStyle}\r\n          contentLabel=\"Example Modal\">\r\n          <ModalContent>\r\n            {/*//? LEFT SECTION */}\r\n            <ModalProfileLeft>\r\n              <ModalProfileContent>\r\n                <Image src={ProfileImg} centered circular size=\"small\" />\r\n                <ModalHeading>\r\n                  Kavya Kulkarni\r\n                </ModalHeading>\r\n                <ModalSubHeading>A Happy Soul</ModalSubHeading>\r\n                <IconGroup>\r\n                  <Icon>\r\n                    <VscGlobe />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <VscGithub />\r\n                  </Icon>\r\n                  <Icon>\r\n                    <FiTwitter />\r\n                  </Icon>\r\n                </IconGroup>\r\n\r\n                <CancelButton>\r\n                  <ImCancelCircle onClick={this.closeModal} />\r\n                </CancelButton>\r\n\r\n              </ModalProfileContent>\r\n\r\n            </ModalProfileLeft>\r\n            {/*//? RIGHT SECTION */}\r\n            <ModalProfileRight>\r\n              {repos}\r\n            </ModalProfileRight>\r\n          </ModalContent>\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\nexport default FriendCard;\r\n","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ProfileStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\CardStyle.js",["114"],"import styled from \"styled-components\";\r\nimport { Segment, Grid, Button } from \"semantic-ui-react\";\r\n\r\n\r\nexport const CardSegment = styled(Segment)`\r\n  @media (min-width: 991px) {\r\n    margin-top: 10vh !important;\r\n    margin-left: 4vw !important;\r\n    margin-right: 4vw !important;\r\n  }\r\n  /* background-color: #0D1117 ; */\r\n`;\r\nexport const CardDetails = styled.div`\r\n  margin-left: 1.5vh ;\r\n  margin-right: 1.5vh ;\r\n`;\r\nexport const CardHeader = styled.h3`\r\n  margin-top: 3vh !important;\r\n  margin-bottom: 0 ;\r\n`;\r\nexport const SubHeader = styled.p`\r\n  margin-top: 5vh !important;\r\n`;\r\nexport const GistSegment = styled.div`\r\n  height: 50vh ;\r\n  overflow-y:auto;\r\n`;\r\nexport const HeartButtonRed = styled.div`\r\n  width: 100px ;\r\n  height: 100px ;\r\n  display: flex;\r\n  flex-direction: row;\r\n  background: url(\"https://cssanimation.rocks/images/posts/steps/heart.png\") no-repeat ;\r\n  background-position: 0 0;\r\n  cursor: pointer;\r\n  transition: background-position 1s steps(28);\r\n  transition-duration: 0s ;\r\n`;\r\nexport const CardButton = styled(Button)`\r\n  margin-top: 0vh !important;\r\n  color: #EEE3E3;\r\n  &:hover{\r\n    color: #AAB8C2;;\r\n  }\r\n`;\r\nexport const ButtonGroup = styled.div`\r\n  margin-top: 0vh;\r\n  text-align:center;\r\n`;\r\n// export const ReactIcon = styled(Grid)`\r\n//   margin: auto auto;\r\n// `;","D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\FriendCardStyle.js",[],"D:\\projects\\gitto\\Gitto\\client\\src\\components\\styles\\ModalStyle.js",[],["115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":1,"nodeType":"123","endLine":27,"endColumn":2},{"ruleId":"121","severity":1,"message":"122","line":7,"column":1,"nodeType":"123","endLine":19,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":17,"column":8,"nodeType":"126","messageId":"127","endLine":17,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":27,"column":26,"nodeType":"126","messageId":"127","endLine":27,"endColumn":30},{"ruleId":"124","severity":1,"message":"130","line":33,"column":10,"nodeType":"126","messageId":"127","endLine":33,"endColumn":27},{"ruleId":"124","severity":1,"message":"131","line":2,"column":19,"nodeType":"126","messageId":"127","endLine":2,"endColumn":23},{"ruleId":"117","replacedBy":"132"},{"ruleId":"119","replacedBy":"133"},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'addUserDescription' is defined but never used.","Identifier","unusedVar","'ProfileImg' is defined but never used.","'Info' is defined but never used.","'drawContributions' is defined but never used.","'Grid' is defined but never used.",["134"],["135"],"no-global-assign","no-unsafe-negation"]